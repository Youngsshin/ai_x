1절. 객체와 클래스
	class 클래스명(상속받을 클래스명) : 
		변수나 함수들 선언

2절. 생성자와 소멸자
	생성자의 이름은  __init__(self, 매개변수, ...)
		- 생성자(Constructor)는 객체가 생성될 때 자동으로 실행
		- 생성 시 필요한 코드를 포함할 수 있음
             소멸자의 이름은 __del__(self) 
		- 객체가 소멸될 때 자동으로 실행
		- 소멸 시 필요한 코드를 포함할 수 있음
		- 인스턴스 객체의 레퍼런스 카운트가 0이 될 때 소멸
	생성자는 중복정의 불가

3절. 변수와 메소드(함수)
	클래스를 사용하는 가장 큰 이유
		- 객체를 이용해 데이터를 저장하기 위해 -> 변수
		- 객체 고유의 기능을 갖기 위해 -> 메서드
	.(점)은 참조 연산자로 사용함
	인스턴스 메서드 
		- 객체를 이용해 참조할 수 있는 메서드
		- 인스턴스 메서드의 첫 번째 인자는 self여야 함
		- self 인자는 객체의 멤버(변수 또는 메서드)에 접근하기 위해 사용
	클래스 메소드 : 메소드 위에 @classmethod를 선언한 메소드. 첫번째 인자에 cls(clz) 꼭 명시
	static 메소드 : 메소드 위에 @staticmethod를 선언한 메소드. 인자를 넣지 않음

4절. 상속과 재정의
	클래스를 재사용
	상속을 이용하면 부모클래스의 모든 속성을 자식클래스로 물려줄 수 있음
	문법 : class 자식클래스명(부모클래스명):

	정적변수(static 변수) : 여러 객체들 사이에 데이터를 공유하고 싶을 때 사용
	static 변수 앞에 under score 2개(__)를 붙이면 클래스명._클래스명__static변수명으로 참조
	클래스변수는 외부에서 바로 접근 가능.
	static 변수는 외부에서 바로 접근하는 것을 방지함
	static 변수는 클래스 내부에서만 접근하도록 하려는 의도임